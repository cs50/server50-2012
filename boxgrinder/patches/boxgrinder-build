#!/usr/bin/ruby
#
# This file was generated by RubyGems.
#
# The application 'boxgrinder-build' is installed as part of a gem, and
# this file is here to facilitate running it.
#

require 'rubygems'

version = ">= 0"

if ARGV.first =~ /^_(.*)_$/ and Gem::Version.correct? $1 then
  version = $1
  ARGV.shift
end

# rhel-plugin.rb
print "Monkey-patching plugins/os/rhel/rhel-plugin.rb...\n"
require 'boxgrinder-build/plugins/os/rhel/rhel-plugin'
module BoxGrinder
  class RHELPlugin < RPMBasedOSPlugin
    plugin :type => :os, :name => :rhel, :full_name => "Red Hat Enterprise Linux", :versions => ['5', '6'], :require_root => true

    ## don't add any packages
    #def normalize_packages(packages)
    #end

  end
end

# rpm-based/rpm-based-os-plugin.rb
print "Monkey-patching plugins/os/rpm-based/rpm-based-os-plugin.rb...\n"
require 'boxgrinder-build/plugins/os/rpm-based/rpm-based-os-plugin'
module BoxGrinder
  class RPMBasedOSPlugin < BasePlugin

    def apply_root_password(guestfs)
    end

    def disable_firewall(guestfs)
    end

    def install_repos(guestfs)
    end

    def set_label_for_swap_partitions(guestfs, guestfs_helper)
    end

    def set_motd(guestfs)
    end

    def use_labels_for_partitions(guestfs)
    end

  end
end

# plugins/os/rpm-based/kickstart.rb
print "Monkey-patching plugins/os/rpm-based/kickstart.rb...\n"
require 'boxgrinder-build/plugins/os/rpm-based/kickstart'
module BoxGrinder
  class Kickstart

    def create
      template = "#{File.dirname(__FILE__)}/appliance.ks.erb"
      kickstart = ERB.new(File.read(template)).result(build_definition.get_binding)
      File.open(@kickstart_file, 'w') { |f| f.write(kickstart) }

      @kickstart_file
    end

  end
end

gem 'boxgrinder-build', version
load Gem.bin_path('boxgrinder-build', 'boxgrinder-build', version)
